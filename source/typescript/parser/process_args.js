export default ((s,u,g)=>({fn:{},st:s,ty:{1:1,2:1,3:2,4:2,8:3,16:3,32:4,64:4,128:5,256:5,264:6,512:6,1025:7,2049:7,4097:8,8193:8,16385:9,32769:9,number:10,num:10,identifier:11,string:11,white_space:12,open_bracket:12,close_bracket:13,operator:13,symbol:14,new_line:14,data_link:15,number_bin:15,number_oct:16,number_hex:16,number_int:17,number_sci:17,number_flt:18,alpha_numeric:18,white_space_new_line:30,id:19,str:20,ws:20,ob:21,cb:21,op:22,sym:22,nl:23,dl:23,int:24,integer:24,bin:25,binary:25,oct:26,octal:26,hex:27,hexadecimal:27,flt:28,float:28,sci:29,scientific:29,any:31,keyword:32},sym:["--"],
    lu:new Map([["num",1],["id",1],["alpha_numeric",2],["str",2],["ws",3],["ob",3],["cb",4],["op",4],["sym",5],["nl",5],["white_space_new_line",6],["dl",6],["binary",7],["octal",7],["hexadecimal",8],["integer",8],["scientific",9],["float",9],[1,10],[2,19],[4,20],[8,20],[16,21],[32,21],[64,22],[128,22],[256,23],[512,23],[1025,25],[2049,26],[4097,27],[8193,24],[16385,29],[32769,28],[3,18],[264,30],[200,31],[201,32],["-",34],["--",35],[null,32],["a",37],["b",38],["c",39],["d",40],["e",41],["f",42],["A",43],["B",44],["C",45],["D",46],["E",47],["F",48],["\"",57],["'",58],["_",59],["\\",62],["$",64]]),sts:[0,1,2,3,4,5,2,5,5,6,7,8,8,8,8,9,8,10,11,8,12,13,14,15,16,17,17,15,18,19,20,21,22,23,23,24,25,26,25,25,27,28,29,30,31,31,31,31,31,31,31,31,32,33,34,35].map(i=>s[i]),fm:[],
    gt:g[0].map(i=>i>=0?u[i]:[]),fns:[_=>(([..._[0],_[1]])),_=>([_[0]]),_=>(_[0].flatMap(v=>v).map(({key,val})=>[key,val])),_=>(Object.assign(Object.fromEntries(_[0].map(([key,val],i)=>[key,{index:i,val:val||true}])),{__array__:_[0]})),_=>(_[1].split("").map((v,i,r)=>(i==r.length-1?_[2]?{key:v,val:_[2]||1}:{key:v}:{key:v}))),_=>({key:_[1],val:_[2]}),_=>({key:_[1],val:null}),_=>({key:_[0],val:null}),_=>({val:parseFloat(_[0]),type:"hex",original_val:_[0]}),_=>({val:parseFloat(_[0]),type:"bin",original_val:_[0]}),_=>({val:parseFloat(_[0]),type:"oct",original_val:_[0]}),_=>({val:parseFloat(_[0]),type:"sci",original_val:_[0]}),_=>({val:parseFloat(_[0]),type:"flt",original_val:_[0]}),_=>({val:parseFloat(_[0]),type:"int",original_val:_[0]}),_=>(_[0]+_[1]),_=>(_[0]+""),_=>(_[1])],sa:[e=>106,e=>130,e=>114,e=>98,e=>282,e=>322,e=>218,e=>186,e=>90,e=>138,(a,b,c,e,f,g,p)=>(p.rn(1,a,b,c,e,f),9),(a,b,c,e,f,g,p)=>(p.rn(1,a,b,c,e,f),20491),(a,b,c,e,f,g,p)=>(p.rv(g[3],1,0,a,b,c,e,f),8203),(a,b,c,e,f,g,p)=>(p.rv(g[1],1,0,a,b,c,e,f),4107),(a,b,c,e,f,g,p)=>(p.rn(1,a,b,c,e,f),10251),(a,b,c,e,f,g,p)=>(p.rv(g[7],1,0,a,b,c,e,f),16395),(a,b,c,e,f,g,p)=>(p.rv(g[15],1,0,a,b,c,e,f),59403),(a,b,c,e,f,g,p)=>(p.rn(1,a,b,c,e,f),57355),(a,b,c,e,f,g,p)=>(p.rn(1,a,b,c,e,f),61451),e=>154,e=>162,(a,b,c,e,f,g,p)=>(p.rv(g[14],2,0,a,b,c,e,f),59411),(a,b,c,e,f,g,p)=>(p.rn(2,a,b,c,e,f),57363),(a,b,c,e,f,g,p)=>(p.rv(g[2],1,0,a,b,c,e,f),6155),(a,b,c,e,f,g,p)=>(p.rv(g[0],2,0,a,b,c,e,f),4115),e=>210,(a,b,c,e,f,g,p)=>(p.rv(g[15],1,0,a,b,c,e,f),53259),(a,b,c,e,f,g,p)=>(p.rn(1,a,b,c,e,f),49163),(a,b,c,e,f,g,p)=>(p.rv(g[15],1,0,a,b,c,e,f),51211),e=>266,e=>274,(a,b,c,e,f,g,p)=>(p.rv(g[14],2,0,a,b,c,e,f),51219),(a,b,c,e,f,g,p)=>(p.rv(g[14],2,0,a,b,c,e,f),53267),(a,b,c,e,f,g,p)=>(p.rv(g[16],3,0,a,b,c,e,f),55323),e=>314,e=>298,e=>290,e=>306,(a,b,c,e,f,g,p)=>(p.rn(1,a,b,c,e,f),65547),(a,b,c,e,f,g,p)=>(p.rn(1,a,b,c,e,f),63499),e=>386,e=>354,e=>402,e=>410,e=>394,e=>362,e=>346,e=>370,e=>378,(a,b,c,e,f,g,p)=>(p.rn(1,a,b,c,e,f),18443),(a,b,c,e,f,g,p)=>(p.rv(g[14],2,0,a,b,c,e,f),65555),(a,b,c,e,f,g,p)=>(p.rv(g[4],2,0,a,b,c,e,f),12307),(a,b,c,e,f,g,p)=>(p.rv(g[6],2,0,a,b,c,e,f),14355),(a,b,c,e,f,g,p)=>(p.rv(g[4],3,0,a,b,c,e,f),12315),(a,b,c,e,f,g,p)=>(p.rv(g[5],3,0,a,b,c,e,f),14363)],
    gtk:function getToken(l, SYM_LU, IGNORE_KEYWORDS = false) {    if (l.END)        return 0;    if ((l.ty & 1)) {        if (!IGNORE_KEYWORDS && SYM_LU.has(l.tx))            return SYM_LU.get(l.tx);        switch (l.ty) {            case 16385:                return 29;            case 4097:                return 27;            case 2049:                return 26;            case 1025:                return 25;            case 32769:                return 28;            case 8193:                return 24;            default:            case 1:                return 10;        }    }    switch (l.ty) {        case 2:            if (!IGNORE_KEYWORDS && SYM_LU.has(l.tx))                return 32;            return 19;        case 4:            return 20;        case 256:            return 23;        case 8:            return 20;        case 512:            return 23;        default:            return SYM_LU.get(l.tx) || SYM_LU.get(l.ty);    }},}))(...("-b;2;-9;4;0;-2;6;-9;8;-3;a;c;-m;e;g;i;-3;k&m;-k;0&o;-a;o;-9;o;0;-2;o;-9;o;-3;pax;-m;1el5;-3;o&q;-k;0&s;-a;s;-9;s;0;-2;s;-9;s;-3;pb1;-m;1el9;-3;s&u;-a;u;-9;u;0;-2;u;-9;u;-3;pb3;-m;1elb;-3;u&w;-a;w;-9;w;0;-2;w;-9;w;-3;pb5;-m;1eld;-3;w&y;-a;y;-9;pb7;-2;y;0;-8;pb7;-2;pb7;-m;1elf;-3;y&10;-a;10;-9;pb9;-2;10;0;-8;pb9;-2;pb9;-m;1elh;-3;10&12;-a;2;-9;4;12;-2;6;0;-8;8;12;-2;14;12;-m;pbb;i;-3;k&-l;0;-3;0;-8;16&18;-a;18;-9;pbh;-2;18;0;-8;pbh;-2;pbh;-m;1elp;-3;18&1a;-a;1a;-9;pbj;-2;1a;0;-8;pbj;-2;pbj;-m;1elr;-3;1a&1c;-a;2;-9;4;0;-2;6;-9;8;-3;a;c;-m;e;g;i;-3;k&1e;-a;1e;-9;1e;0;-2;1e;-9;1e;-3;pbn;-m;1elv;-3;1e&-b;2;-9;4;1g;-2;6;0;-8;8;-3;14;-p;i;-3;k&-b;1i;-9;pbr;-2;1i;0;-8;1i;-3;1i;-o;pbr;-3;1i&-b;1k;-9;pbt;-2;1k;0;-8;1k;-3;1k;-n;1em1;-3;1k&-b;1m;-9;pbv;-2;1m;0;-8;1m;-3;1m;-n;1m;-2;1m;-3;1m&-b;2;-9;4;1g;-2;6;0;-8;8;-3;14;-n;1o;-2;i;-3;k&-b;2;-9;4;1g;-2;6;0;-8;8;-3;14;-o;1q;i;-3;k&-b;1s;-9;pc1;-2;1s;0;-8;1s;-3;1s;-n;1s;-2;1s;-3;1s&-b;1u;-9;pc3;-2;1u;0;-8;1u;-3;1u;-o;pc3;-3;1u&1w;-a;1w;-9;1w;0;-2;1w;0;-8;1w;-3;pc5;-m;1emd;-3;1w&10;-a;10;-9;1y;10;-2;10;-9;pb9;-2;20;10;-m;pb9;22;-3;10;-2;24&26;-a;26;-9;pcf;-2;26;0;-2;1emn;-4;pcf;-2;pcf;-m;1emn;-3;26;-2;26&26;-a;26;-9;pcf;-2;26;-3;1emn;-4;pcf;-2;pcf;-m;1emn;-3;26;-2;26&-k;1y;0;-e;20;-p;22;-5;24&28;-a;2a;-9;2c;28;-2;28;0;-2;2e;2g;2i;-4;28;2k;-2;2m;28;-m;pch;2o;-3;28;-2;2q&2s;-a;2s;-9;2s;0;-2;2s;-9;2s;-3;pd1;-m;1en9;-3;2s&2u;-a;2u;-9;pd3;-2;2u;-3;1enb;-4;pd3;-2;pd3;-m;1enb;-3;2u;-2;2u&2u;-a;2u;-9;pd3;-2;2u;0;-2;1enb;-4;pd3;-2;pd3;-m;1enb;-3;2u;-2;2u&2w;-a;2;-9;4;0;-2;6;-9;8;-3;14;2w;-m;e;g;i;-3;k&2y;-a;2;-9;4;0;-2;6;-9;8;-3;14;2y;-m;e;g;i;-3;k&30;-a;30;-9;30;0;-2;30;-9;30;-3;pd9;-m;1enh;-3;30&32;-a;32;-9;32;0;-2;32;-9;32;-3;pdb;-m;1enj;-3;32|-3;16;6;2;8;e;g;a;-2;i;-h;4;k;u;c&-t;10&-6;18;e;g;a;-2;i;-h;4;k;u;c&-p;1c;-2;1o;-2;k;u;1e&-p;1k;1m;-3;k;u;1e&-p;1q;-4;k;u;1e&-p;1s;-4;k;u;1e&-w;2w;2a&-a;2y;-m;2c;2a&-b;30;-h;4;k;u;c&-b;32;-h;4;k;u;c|0;-f;2;-6;4;-2;6;-4;8;-2;a;c;-5;e;-5;g;-c;i;k;-3").split("|").map(e=>e.split("&")).map(a => a.map(s => s.split(";").map(s=>parseInt(s,36))).map(s=>s.flatMap(d=>d<0?(new Array(-d-1)).fill(-1):(new Array(((d >>> 15) & 0x3FF) + 1)).fill((d >>> 1) & 0x3FFF)))));